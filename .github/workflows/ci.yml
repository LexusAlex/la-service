name: la-service pipeline
on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-20.04
    env:
      APPLICATION_ENVIRONMENT: test
      APPLICATION_DEBUG: 1
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['8.1']
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: slim
          MYSQL_DATABASE: slim
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Git checkout placeholder-service
        uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: none
          tools: composer:v2
          extensions: mbstring, mysql, zip
      - name: Check PHP Version
        run: php -v
      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >>$GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --working-dir=backend
      #  run: composer install --working-dir=/backend/
      - name: Run php lint
        run: composer --working-dir=backend phplint
      - name: Run php cs fixer
        run: composer --working-dir=backend php-cs-fixer fix -- --dry-run --diff
      - name: Run phpunit test
        run: composer --working-dir=backend phpunit
      - name: Run psalm
        run: composer --working-dir=backend psalm
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: checkout project
      uses: actions/checkout@v3
    # Подготовительная работа к деплою phpunit, linter, тесты и прочее и последнее что надо сделать это вылить на прод
    - name: push on production server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.REMOTE_HOST }}
        port: ${{ secrets.REMOTE_PORT }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script_stop: true
        script: |
          git -C ${{ secrets.REMOTE_PATH }} pull
          composer install --working-dir=${{ secrets.REMOTE_PATH }}/backend/ --no-dev --optimize-autoloader --classmap-authoritative
          MYSQL_HOST={{ secrets.MYSQL_HOST }} MYSQL_USER={{ secrets.MYSQL_USER }} MYSQL_PASSWORD={{ secrets.MYSQL_PASSWORD }} MYSQL_DATABASE={{ secrets.MYSQL_DATABASE }} MYSQL_CHARSET={{ secrets.MYSQL_CHARSET }} composer --working-dir=${{ secrets.REMOTE_PATH }}/backend/ cli migrations:migrate -- --no-interaction